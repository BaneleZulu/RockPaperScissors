/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.nihil.RockPaperScissors;

/**
 *
 * @author LATITUDE 5410
 */
import javax.swing.*;
import java.awt.*;
import java.sql.*;

import com.nihil.RockPaperScissors_USER_LOGON.Player;

public class SettingsBoard extends javax.swing.JFrame {

    private Connection connect;
    private PreparedStatement prep;
    private ResultSet result;
    private String query;
    private Player user;

    /**
     * Creates new form SettingsBoard
     */
    public SettingsBoard(Player player) {
        this.setUndecorated(true);
        this.setResizable(false);
        this.setTitle("ROCK-PAPER-SCISSORS -> SETTINGS");
        initComponents();
        //establishConnection();
        user = player;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        headerLbl = new javax.swing.JLabel();
        exitControl = new javax.swing.JLabel();
        motherPnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updateControl = new javax.swing.JLabel();
        passwordtxt = new javax.swing.JPasswordField();
        lastlogonLbl = new javax.swing.JLabel();
        joinedDateLbl = new javax.swing.JLabel();
        playLbl = new javax.swing.JLabel();
        motherInnrPnl = new javax.swing.JPanel();
        emailtxt = new javax.swing.JTextField();
        lastnametxt = new javax.swing.JTextField();
        nametxt = new javax.swing.JTextField();
        updatePasswordControl = new javax.swing.JLabel();
        deleteControl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contentPane.setBackground(new java.awt.Color(41, 41, 41));

        headerLbl.setBackground(new java.awt.Color(41, 41, 41));
        headerLbl.setFont(new java.awt.Font("Showcard Gothic", 0, 44)); // NOI18N
        headerLbl.setForeground(new java.awt.Color(255, 255, 255));
        headerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLbl.setText("EDIT USER INFORMATION");

        exitControl.setBackground(new java.awt.Color(41, 41, 41));
        exitControl.setFont(new java.awt.Font("Showcard Gothic", 0, 22)); // NOI18N
        exitControl.setForeground(new java.awt.Color(204, 204, 204));
        exitControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitControl.setText("X");
        exitControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitControlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitControlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitControlMouseExited(evt);
            }
        });

        motherPnl.setBackground(new java.awt.Color(41, 41, 41));
        motherPnl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setForeground(new java.awt.Color(225, 225, 225));
        jLabel1.setText("CHANGE YOUR PASSWORD");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(35, 35, 35)));

        updateControl.setBackground(new java.awt.Color(41, 41, 41));
        updateControl.setFont(new java.awt.Font("Showcard Gothic", 0, 30)); // NOI18N
        updateControl.setForeground(new java.awt.Color(255, 255, 255));
        updateControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateControl.setText("UPDATE PROFILE");
        updateControl.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        updateControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateControlMouseClicked(evt);
            }
        });

        passwordtxt.setBackground(new java.awt.Color(41, 41, 41));
        passwordtxt.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        passwordtxt.setForeground(new java.awt.Color(255, 255, 255));
        passwordtxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordtxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 0, 204)));

        lastlogonLbl.setBackground(new java.awt.Color(41, 41, 41));
        lastlogonLbl.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        lastlogonLbl.setForeground(new java.awt.Color(255, 255, 255));
        lastlogonLbl.setText("LAST LOGON DATE");
        lastlogonLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 0, 255)));
        lastlogonLbl.setEnabled(false);

        joinedDateLbl.setBackground(new java.awt.Color(41, 41, 41));
        joinedDateLbl.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        joinedDateLbl.setForeground(new java.awt.Color(255, 255, 255));
        joinedDateLbl.setText("JOINED DATE");
        joinedDateLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 0, 255)));
        joinedDateLbl.setEnabled(false);

        playLbl.setBackground(new java.awt.Color(41, 41, 41));
        playLbl.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        playLbl.setForeground(new java.awt.Color(255, 255, 255));
        playLbl.setText("PLAYS");
        playLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 0, 255)));
        playLbl.setEnabled(false);

        motherInnrPnl.setBackground(new java.awt.Color(41, 41, 41));
        motherInnrPnl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        emailtxt.setBackground(new java.awt.Color(41, 41, 41));
        emailtxt.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        emailtxt.setForeground(new java.awt.Color(255, 255, 255));
        emailtxt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        emailtxt.setText("EMAIL");
        emailtxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 0, 204)));
        emailtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emailtxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emailtxtMouseExited(evt);
            }
        });

        lastnametxt.setBackground(new java.awt.Color(41, 41, 41));
        lastnametxt.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        lastnametxt.setForeground(new java.awt.Color(255, 255, 255));
        lastnametxt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        lastnametxt.setText("LASTNAME");
        lastnametxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 0, 204)));
        lastnametxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lastnametxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lastnametxtMouseExited(evt);
            }
        });

        nametxt.setBackground(new java.awt.Color(41, 41, 41));
        nametxt.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        nametxt.setForeground(new java.awt.Color(255, 255, 255));
        nametxt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nametxt.setText("FIRSTNAME");
        nametxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 0, 204)));
        nametxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nametxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nametxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout motherInnrPnlLayout = new javax.swing.GroupLayout(motherInnrPnl);
        motherInnrPnl.setLayout(motherInnrPnlLayout);
        motherInnrPnlLayout.setHorizontalGroup(
            motherInnrPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(motherInnrPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(motherInnrPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emailtxt)
                    .addComponent(lastnametxt)
                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        motherInnrPnlLayout.setVerticalGroup(
            motherInnrPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(motherInnrPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lastnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        updatePasswordControl.setFont(new java.awt.Font("Showcard Gothic", 0, 16)); // NOI18N
        updatePasswordControl.setText("UPDATE PASSWORD");
        updatePasswordControl.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        updatePasswordControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatePasswordControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePasswordControlMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout motherPnlLayout = new javax.swing.GroupLayout(motherPnl);
        motherPnl.setLayout(motherPnlLayout);
        motherPnlLayout.setHorizontalGroup(
            motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(motherPnlLayout.createSequentialGroup()
                .addGroup(motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(motherPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(motherInnrPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(motherPnlLayout.createSequentialGroup()
                        .addGroup(motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(motherPnlLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(updateControl, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(motherPnlLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lastlogonLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(motherPnlLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(joinedDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(motherPnlLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(motherPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passwordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(updatePasswordControl)
                .addGap(23, 23, 23))
        );
        motherPnlLayout.setVerticalGroup(
            motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(motherPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(motherInnrPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(playLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lastlogonLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(joinedDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(motherPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatePasswordControl))
                .addGap(28, 28, 28)
                .addComponent(updateControl, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        deleteControl.setBackground(new java.awt.Color(41, 41, 41));
        deleteControl.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        deleteControl.setForeground(new java.awt.Color(255, 255, 255));
        deleteControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteControl.setText("DELETE PROFILE");
        deleteControl.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        deleteControl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 0, 255)));
        deleteControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteControlMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(headerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitControl, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentPaneLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(motherPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerLbl)
                    .addComponent(exitControl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(motherPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteControl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseClicked
        this.dispose();
    }//GEN-LAST:event_exitControlMouseClicked

    private void exitControlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseEntered
        exitControl.setForeground(Color.RED);
        exitControl.setFont(new Font("Showcard Gothic", Font.BOLD, 25));
    }//GEN-LAST:event_exitControlMouseEntered

    private void exitControlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseExited
        exitControl.setForeground(new Color(204, 204, 204));
        exitControl.setFont(new Font("Showcard Gothic", Font.PLAIN, 22));
    }//GEN-LAST:event_exitControlMouseExited

    private void emailtxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailtxtMouseEntered
        if (emailtxt.getText().length() == 0 || emailtxt.getText().equals("EMAIL")) {
            emailtxt.setText(null);
            emailtxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        }
    }//GEN-LAST:event_emailtxtMouseEntered

    private void emailtxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailtxtMouseExited
        if (emailtxt.getText().length() == 0) {
            emailtxt.setText("EMAIL");
            emailtxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(204, 0, 204)));
        }
    }//GEN-LAST:event_emailtxtMouseExited

    private void lastnametxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastnametxtMouseEntered
        if (lastnametxt.getText().length() == 0 || lastnametxt.getText().equals("LASTNAME")) {
            lastnametxt.setText(null);
            lastnametxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        }
    }//GEN-LAST:event_lastnametxtMouseEntered

    private void lastnametxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastnametxtMouseExited
        if (lastnametxt.getText().length() == 0) {
            lastnametxt.setText("LASTNAME");
            lastnametxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(204, 0, 204)));
        }
    }//GEN-LAST:event_lastnametxtMouseExited

    private void nametxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nametxtMouseEntered
        if (nametxt.getText().length() == 0 || nametxt.getText().equals("FIRSTNAME")) {
            nametxt.setText(null);
            nametxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        }
    }//GEN-LAST:event_nametxtMouseEntered

    private void nametxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nametxtMouseExited
        if (nametxt.getText().length() == 0) {
            nametxt.setText("FIRSTNAME");
            nametxt.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(204, 0, 204)));
        }
    }//GEN-LAST:event_nametxtMouseExited

    private void establishConnection() {
        final String url = "jdbc:sqlserver://DESKTOP-LUKU6V1; Database=RockPaperScissorsDATABASE; IntegratedSecurity=false; Encrypt=True; TrustServerCertificate=True";
        String dbUsername = "sa";
        String dbPassword = "securityTrue";
        try {
            connect = DriverManager.getConnection(url, dbUsername, dbPassword);
            System.out.println("CONNECTION ESTABLISHED SUCCESSFULY");
            getUserInformation();
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error.getMessage());
        }
    }

    private void getUserInformation() {
        try {
            query = "SELECT * FROM PLAYER WHERE PLAYER_ID = " + user.getPlayerID();
            prep = connect.prepareStatement(query);
            result = prep.executeQuery();
            while (result.next()) {
                nametxt.setText(result.getString("PLAYER_NAME"));
                lastnametxt.setText(result.getString("PLAYER_LASTNAME"));
                emailtxt.setText(result.getString("PLAYER_EMAIL"));
                playLbl.setText(String.valueOf(result.getInt("PLAYER_PLAYS")));
                lastlogonLbl.setText(result.getString("PLAYER_LASTLOGON"));
                joinedDateLbl.setText(result.getString("PLAYER_JOINDATE"));
            }
        } catch (SQLException error) {
            System.out.println(error.getMessage());
        }
    }

    private void updateControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateControlMouseClicked
        try {
            if (nametxt.getText().equals(null) || nametxt.getText().equals(user.getName())
                    || lastnametxt.getText().equals(null) || lastnametxt.getText().equals(user.getLastname())
                    || emailtxt.getText().equals(null) || emailtxt.getText().equals(user.getEmail())
                    || passwordtxt.getText().equals(null) || passwordtxt.getText().equals(user.getPassword())) {
                JOptionPane.showMessageDialog(null, "No chages performed to profile", "USER PROFILE STATUS", JOptionPane.INFORMATION_MESSAGE);
            } else {
                query = "UPDATE PLAYER SET PLAYER_NAME = ?, PLAYER_LASTNAME = ?, PLAYER_EMAIL = ? PLAYER_PASSWORD = ?"
                      + "WHERE PLAYER_ID = " + user.getPlayerID();
                prep = connect.prepareStatement(query);
                prep.setString(1, nametxt.getText());
                prep.setString(2, lastnametxt.getText());
                prep.setString(3, emailtxt.getText());
                prep.setString(4, passwordtxt.getText());
                JOptionPane.showMessageDialog(null, "Profile Updated Successfuly....", "USER PROFILE STATUS", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException error) {
            System.out.println(error.getMessage());
        }
    }//GEN-LAST:event_updateControlMouseClicked

    private void deleteControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteControlMouseClicked
        try {
            query = "DELETE * FROM PLAYER WHERE PLAYER_PLAYER_ID = " + user.getPlayerID();
            prep = connect.prepareStatement(query);
            prep.executeUpdate();
            JOptionPane.showMessageDialog(null, "Profile Deleted....", "PROFILE DELETED SUCCESSFULY", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException error) {
            System.out.println(error.getMessage());
        }
    }//GEN-LAST:event_deleteControlMouseClicked

    private void updatePasswordControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePasswordControlMouseClicked
        try {
            query = "UPDATE PLAYER WHERE PLAYER_ID = " + user.getPlayerID()
                    + "SET PLAYER.PLAYER_PASSWORD = " + passwordtxt.getText();
            prep = connect.prepareStatement(query);
            prep.executeUpdate();
            JOptionPane.showMessageDialog(null, "Password Updated Successfuly....", "PROFILE PASSWORD CHANGED", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException error) {
            System.out.println(error.getMessage());
        }
    }//GEN-LAST:event_updatePasswordControlMouseClicked

    static public void main(String... m) {
        Player p = new Player();
        new SettingsBoard(p).setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPane;
    private javax.swing.JLabel deleteControl;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JLabel exitControl;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel joinedDateLbl;
    private javax.swing.JLabel lastlogonLbl;
    private javax.swing.JTextField lastnametxt;
    private javax.swing.JPanel motherInnrPnl;
    private javax.swing.JPanel motherPnl;
    private javax.swing.JTextField nametxt;
    private javax.swing.JPasswordField passwordtxt;
    private javax.swing.JLabel playLbl;
    private javax.swing.JLabel updateControl;
    private javax.swing.JLabel updatePasswordControl;
    // End of variables declaration//GEN-END:variables
}
